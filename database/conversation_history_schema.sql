-- Create conversation_history table for chat memory persistence
CREATE TABLE IF NOT EXISTS conversation_history (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id TEXT NOT NULL,
    session_id TEXT DEFAULT 'default',
    user_message TEXT NOT NULL,
    ai_response TEXT NOT NULL,
    timestamp TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_conversation_history_user_id ON conversation_history(user_id);
CREATE INDEX IF NOT EXISTS idx_conversation_history_session_id ON conversation_history(session_id);
CREATE INDEX IF NOT EXISTS idx_conversation_history_timestamp ON conversation_history(timestamp);
CREATE INDEX IF NOT EXISTS idx_conversation_history_user_session ON conversation_history(user_id, session_id);

-- Add RLS (Row Level Security) policies
ALTER TABLE conversation_history ENABLE ROW LEVEL SECURITY;

-- Policy to allow users to only see their own conversations
CREATE POLICY "Users can view own conversations" ON conversation_history
    FOR SELECT USING (user_id = auth.uid()::text);

-- Policy to allow users to insert their own conversations
CREATE POLICY "Users can insert own conversations" ON conversation_history
    FOR INSERT WITH CHECK (user_id = auth.uid()::text);

-- Policy to allow users to delete their own conversations
CREATE POLICY "Users can delete own conversations" ON conversation_history
    FOR DELETE USING (user_id = auth.uid()::text);

-- Add comments for documentation
COMMENT ON TABLE conversation_history IS 'Stores chat conversation history for LangChain memory persistence';
COMMENT ON COLUMN conversation_history.user_id IS 'Reference to the authenticated user';
COMMENT ON COLUMN conversation_history.session_id IS 'Session identifier for multiple conversation threads';
COMMENT ON COLUMN conversation_history.user_message IS 'The user input message';
COMMENT ON COLUMN conversation_history.ai_response IS 'The AI assistant response';
COMMENT ON COLUMN conversation_history.timestamp IS 'When the conversation turn occurred';